

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class WorkItem : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the WorkItem entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WorkItem()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WorkItem(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.WorkItem> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.WorkItem.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItem_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItem_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.CreatedDate);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.CreatedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ChangedDate
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ChangedDate);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ChangedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ChangedBy
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ChangedBy);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ChangedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Priority
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.State);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Effort
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Effort);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Effort, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effort_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effort_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Effort_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> BusinessValue
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.BusinessValue);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.BusinessValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsBlocked
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.IsBlocked);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.IsBlocked, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBlocked_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBlocked_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsBlocked_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> RemainingWork
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.RemainingWork);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.RemainingWork, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingWork_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingWork_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingWork_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Reason
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Reason);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Reason, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reason_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reason_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reason_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentName
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ParentName);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ParentName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Sprint Sprint
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Sprint);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Sprint, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprint_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprint_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprint_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.WorkItem Parent
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Parent);
            }
            set
            {
                global::LightSwitchApplication.WorkItem.DetailsClass.SetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Parent, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Parent_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Parent_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Parent_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.WorkItem> Children
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetValue(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Children);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.WorkItem> ChildrenQuery
        {
            get
            {
                return global::LightSwitchApplication.WorkItem.DetailsClass.GetQuery(this, global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Children);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.WorkItem,
                global::LightSwitchApplication.WorkItem.DetailsClass,
                global::LightSwitchApplication.WorkItem.DetailsClass.IImplementation,
                global::LightSwitchApplication.WorkItem.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>.Entry
                __WorkItemEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>.Entry(
                    global::LightSwitchApplication.WorkItem.DetailsClass.__WorkItem_CreateNew,
                    global::LightSwitchApplication.WorkItem.DetailsClass.__WorkItem_Created,
                    global::LightSwitchApplication.WorkItem.DetailsClass.__WorkItem_AllowSaveWithErrors);
            private static global::LightSwitchApplication.WorkItem __WorkItem_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.WorkItem> es)
            {
                return new global::LightSwitchApplication.WorkItem(es);
            }
            private static void __WorkItem_Created(global::LightSwitchApplication.WorkItem e)
            {
                e.WorkItem_Created();
            }
            private static bool __WorkItem_AllowSaveWithErrors(global::LightSwitchApplication.WorkItem e)
            {
                bool result = false;
                e.WorkItem_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.WorkItem.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime> CreatedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.CreatedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime> ChangedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ChangedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> ChangedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ChangedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>> Effort
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Effort) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>> BusinessValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.BusinessValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<bool>> IsBlocked
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.IsBlocked) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>> RemainingWork
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.RemainingWork) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> Reason
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Reason) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> ParentName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ParentName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.ProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Sprint> Sprint
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Sprint) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Sprint>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem> Parent
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Parent) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem> Children
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Children) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Title { get; set; }
                new string Type { get; set; }
                new string Description { get; set; }
                new global::System.DateTime CreatedDate { get; set; }
                new string CreatedBy { get; set; }
                new global::System.DateTime ChangedDate { get; set; }
                new string ChangedBy { get; set; }
                new global::System.Nullable<int> Priority { get; set; }
                new string AssignedTo { get; set; }
                new string State { get; set; }
                new global::System.Nullable<int> Effort { get; set; }
                new global::System.Nullable<int> BusinessValue { get; set; }
                new global::System.Nullable<bool> IsBlocked { get; set; }
                new global::System.Nullable<int> RemainingWork { get; set; }
                new string Reason { get; set; }
                new string ParentName { get; set; }
                new string ProjectName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Sprint { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Parent { get; set; }
                new global::System.Collections.IEnumerable Children { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, int>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Entry
                    CreatedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Entry(
                        "CreatedDate",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedDate_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedDate_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedDate_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedDate_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedDate_OnValueChanged);
                private static void _CreatedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedDate, sf);
                }
                private static bool _CreatedDate_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.CreatedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedDate_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedDate_Validate(r);
                }
                private static global::System.DateTime _CreatedDate_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedDate;
                }
                private static void _CreatedDate_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.CreatedDate = global::LightSwitchApplication.WorkItem.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedDate_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.CreatedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Entry
                    ChangedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Entry(
                        "ChangedDate",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedDate_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedDate_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedDate_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedDate_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedDate_OnValueChanged);
                private static void _ChangedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ChangedDate, sf);
                }
                private static bool _ChangedDate_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.ChangedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ChangedDate_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ChangedDate_Validate(r);
                }
                private static global::System.DateTime _ChangedDate_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ChangedDate;
                }
                private static void _ChangedDate_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ChangedDate = global::LightSwitchApplication.WorkItem.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ChangedDate_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.ChangedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    ChangedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "ChangedBy",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedBy_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedBy_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedBy_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedBy_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ChangedBy_OnValueChanged);
                private static void _ChangedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ChangedBy, sf);
                }
                private static bool _ChangedBy_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.ChangedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ChangedBy_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ChangedBy_Validate(r);
                }
                private static string _ChangedBy_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ChangedBy;
                }
                private static void _ChangedBy_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ChangedBy = v;
                }
                private static void _ChangedBy_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.ChangedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Priority",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static global::System.Nullable<int> _Priority_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static string _AssignedTo_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AssignedTo = v;
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._State_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._State_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._State_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._State_OnValueChanged);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static bool _State_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.State_IsReadOnly(ref result);
                    return result;
                }
                private static void _State_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.State;
                }
                private static void _State_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.State = v;
                }
                private static void _State_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry
                    Effort = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Effort",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Effort_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Effort_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Effort_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Effort_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Effort_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Effort_OnValueChanged);
                private static void _Effort_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Effort, sf);
                }
                private static bool _Effort_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Effort_IsReadOnly(ref result);
                    return result;
                }
                private static void _Effort_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Effort_Validate(r);
                }
                private static global::System.Nullable<int> _Effort_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Effort;
                }
                private static void _Effort_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Effort = v;
                }
                private static void _Effort_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Effort_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry
                    BusinessValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "BusinessValue",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._BusinessValue_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._BusinessValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._BusinessValue_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._BusinessValue_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._BusinessValue_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._BusinessValue_OnValueChanged);
                private static void _BusinessValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._BusinessValue, sf);
                }
                private static bool _BusinessValue_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.BusinessValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _BusinessValue_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BusinessValue_Validate(r);
                }
                private static global::System.Nullable<int> _BusinessValue_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.BusinessValue;
                }
                private static void _BusinessValue_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.BusinessValue = v;
                }
                private static void _BusinessValue_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.BusinessValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsBlocked = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsBlocked",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._IsBlocked_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._IsBlocked_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._IsBlocked_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._IsBlocked_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._IsBlocked_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._IsBlocked_OnValueChanged);
                private static void _IsBlocked_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._IsBlocked, sf);
                }
                private static bool _IsBlocked_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.IsBlocked_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsBlocked_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsBlocked_Validate(r);
                }
                private static global::System.Nullable<bool> _IsBlocked_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.IsBlocked;
                }
                private static void _IsBlocked_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsBlocked = v;
                }
                private static void _IsBlocked_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.IsBlocked_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry
                    RemainingWork = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "RemainingWork",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RemainingWork_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RemainingWork_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RemainingWork_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RemainingWork_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RemainingWork_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._RemainingWork_OnValueChanged);
                private static void _RemainingWork_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._RemainingWork, sf);
                }
                private static bool _RemainingWork_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.RemainingWork_IsReadOnly(ref result);
                    return result;
                }
                private static void _RemainingWork_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RemainingWork_Validate(r);
                }
                private static global::System.Nullable<int> _RemainingWork_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.RemainingWork;
                }
                private static void _RemainingWork_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.RemainingWork = v;
                }
                private static void _RemainingWork_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.RemainingWork_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    Reason = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "Reason",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Reason_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Reason_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Reason_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Reason_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Reason_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Reason_OnValueChanged);
                private static void _Reason_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Reason, sf);
                }
                private static bool _Reason_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Reason_IsReadOnly(ref result);
                    return result;
                }
                private static void _Reason_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Reason_Validate(r);
                }
                private static string _Reason_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Reason;
                }
                private static void _Reason_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Reason = v;
                }
                private static void _Reason_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Reason_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    ParentName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "ParentName",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ParentName_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ParentName_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ParentName_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ParentName_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ParentName_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ParentName_OnValueChanged);
                private static void _ParentName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentName, sf);
                }
                private static bool _ParentName_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.ParentName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentName_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentName_Validate(r);
                }
                private static string _ParentName_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentName;
                }
                private static void _ParentName_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentName = v;
                }
                private static void _ParentName_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.ParentName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Entry(
                        "ProjectName",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ProjectName_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ProjectName_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static bool _ProjectName_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.ProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectName_Validate(r);
                }
                private static string _ProjectName_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectName;
                }
                private static void _ProjectName_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectName = v;
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.ProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Project_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Sprint>.Entry
                    Sprint = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Sprint>.Entry(
                        "Sprint",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_GetCoreImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_Refresh,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Sprint_OnValueChanged);
                private static void _Sprint_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Sprint>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Sprint, sf);
                }
                private static bool _Sprint_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Sprint_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sprint_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sprint_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Sprint_GetCoreImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Sprint;
                }
                private static global::LightSwitchApplication.Sprint _Sprint_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Sprint, global::LightSwitchApplication.Sprint.DetailsClass>(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Sprint, ref d._Sprint);
                }
                private static void _Sprint_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::LightSwitchApplication.Sprint v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Sprint, ref d._Sprint, (i, ev) => i.Sprint = ev, v);
                }
                private static void _Sprint_Refresh(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Sprint, ref d._Sprint);
                }
                private static void _Sprint_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Sprint_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Entry
                    Parent = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Entry(
                        "Parent",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_ComputeIsReadOnly,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_Validate,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_GetCoreImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_GetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_SetImplementationValue,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_Refresh,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Parent_OnValueChanged);
                private static void _Parent_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Parent, sf);
                }
                private static bool _Parent_ComputeIsReadOnly(global::LightSwitchApplication.WorkItem e)
                {
                    bool result = false;
                    e.Parent_IsReadOnly(ref result);
                    return result;
                }
                private static void _Parent_Validate(global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Parent_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Parent_GetCoreImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Parent;
                }
                private static global::LightSwitchApplication.WorkItem _Parent_GetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Parent, ref d._Parent);
                }
                private static void _Parent_SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass d, global::LightSwitchApplication.WorkItem v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Parent, ref d._Parent, (i, ev) => i.Parent = ev, v);
                }
                private static void _Parent_Refresh(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Parent, ref d._Parent);
                }
                private static void _Parent_OnValueChanged(global::LightSwitchApplication.WorkItem e)
                {
                    e.Parent_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Entry
                    Children = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Entry(
                        "Children",
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Children_Stub,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Children_GetReferencedEntities,
                        global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties._Children_GetEntityCollection);
                private static void _Children_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.WorkItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Data> c, global::LightSwitchApplication.WorkItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Children, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.WorkItem> _Children_GetReferencedEntities(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass>(global::LightSwitchApplication.WorkItem.DetailsClass.PropertySetProperties.Children, ref d._Children);
                }
                private static global::System.Collections.IEnumerable _Children_GetEntityCollection(global::LightSwitchApplication.WorkItem.DetailsClass d)
                {
                    return d.ImplementationEntity.Children;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Data _CreatedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.DateTime>.Data _ChangedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _ChangedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data _Effort;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data _BusinessValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<bool>>.Data _IsBlocked;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::System.Nullable<int>>.Data _RemainingWork;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _Reason;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _ParentName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, string>.Data _ProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.Sprint>.Data _Sprint;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Data _Parent;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.WorkItem, global::LightSwitchApplication.WorkItem.DetailsClass, global::LightSwitchApplication.WorkItem>.Data _Children;
            
        }
    
        #endregion
    }
    
    #endregion
}
