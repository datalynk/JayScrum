//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Inserting(global::LightSwitchApplication.WorkItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Inserted(global::LightSwitchApplication.WorkItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Updating(global::LightSwitchApplication.WorkItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Updated(global::LightSwitchApplication.WorkItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Deleting(global::LightSwitchApplication.WorkItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Deleted(global::LightSwitchApplication.WorkItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Validate(global::LightSwitchApplication.WorkItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.WorkItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Inserting(global::LightSwitchApplication.Sprint entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Inserted(global::LightSwitchApplication.Sprint entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Updating(global::LightSwitchApplication.Sprint entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Updated(global::LightSwitchApplication.Sprint entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Deleting(global::LightSwitchApplication.Sprint entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Deleted(global::LightSwitchApplication.Sprint entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Validate(global::LightSwitchApplication.Sprint entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sprints_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sprint, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.WorkItem>
                __WorkItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.WorkItem>(
                    "WorkItems",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkItems_Filter);
            private static bool __WorkItems_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkItems_CanInsert(ref result);
                return result;
            }
            private static bool __WorkItems_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkItems_CanUpdate(ref result);
                return result;
            }
            private static bool __WorkItems_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkItems_CanDelete(ref result);
                return result;
            }
            private static bool __WorkItems_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.WorkItems_CanRead(ref result);
                return result;
            }
            private static void __WorkItems_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e)
            {
                d.WorkItems_Inserting(e);
            }
            private static void __WorkItems_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e)
            {
                d.WorkItems_Inserted(e);
            }
            private static void __WorkItems_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e)
            {
                d.WorkItems_Updating(e);
            }
            private static void __WorkItems_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e)
            {
                d.WorkItems_Updated(e);
            }
            private static void __WorkItems_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e)
            {
                d.WorkItems_Deleting(e);
            }
            private static void __WorkItems_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e)
            {
                d.WorkItems_Deleted(e);
            }
            private static void __WorkItems_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.WorkItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.WorkItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.WorkItem, bool>> __WorkItems_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.WorkItem, bool>> filter = null;
                d.WorkItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sprint>
                __SprintsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sprint>(
                    "Sprints",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sprints_Filter);
            private static bool __Sprints_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sprints_CanInsert(ref result);
                return result;
            }
            private static bool __Sprints_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sprints_CanUpdate(ref result);
                return result;
            }
            private static bool __Sprints_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sprints_CanDelete(ref result);
                return result;
            }
            private static bool __Sprints_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sprints_CanRead(ref result);
                return result;
            }
            private static void __Sprints_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e)
            {
                d.Sprints_Inserting(e);
            }
            private static void __Sprints_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e)
            {
                d.Sprints_Inserted(e);
            }
            private static void __Sprints_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e)
            {
                d.Sprints_Updating(e);
            }
            private static void __Sprints_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e)
            {
                d.Sprints_Updated(e);
            }
            private static void __Sprints_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e)
            {
                d.Sprints_Deleting(e);
            }
            private static void __Sprints_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e)
            {
                d.Sprints_Deleted(e);
            }
            private static void __Sprints_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sprint e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Sprints_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sprint, bool>> __Sprints_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sprint, bool>> filter = null;
                d.Sprints_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
